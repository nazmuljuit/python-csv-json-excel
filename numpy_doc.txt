Q: Whatâ€™s the difference between a Python list and a NumPy array?
A: NumPy gives you an enormous range of fast and efficient ways of creating arrays and manipulating numerical data inside them. While a Python list can contain different data types within a single list, all of the elements in a NumPy array should be homogeneous.

Q:Why use NumPy?
A:NumPy arrays are faster and more compact than Python lists. An array consumes less memory and is convenient to use. NumPy uses much less memory to store data and it provides a mechanism of specifying the data types. This allows the code to be optimized even further.

***This section covers np.array(), np.zeros(), np.ones(), np.empty(), np.arange(), np.linspace(), dtype()

***In addition to sort(), which returns a sorted copy of an array, you can use:

    argsort(), which is an indirect sort along a specified axis,

    lexsort(), which is an indirect stable sort on multiple keys,

    searchsorted(), which will find elements in a sorted array, and 
    partition(), which is a partial sort.